.decl edge(x:number, y:number)
.input edge

// Active domain
.decl adom(x:number)
adom(x) :- edge(x, _).
adom(x) :- edge(_, x).

// T1-varianten (β  {x != z, y != x}, γ  {y != z, z != x})
.decl T1(z:number, x:number, x2:number, y2:number, x:number, y:number)
T1(z, y2, x, y) :-
    edge(x, y),
    edge(y, z),
    adom(y2),
    x != z,
    y != z.

T1(z, y2, x, y) :-
    edge(x, y),
    edge(y, z),
    adom(y2),
    x != z,
    z != x.

T1(z, y2, x, y) :-
    edge(x, y),
    edge(y, z),
    adom(y2),
    y != x,
    y != z.

T1(z, y2, x, y) :-
    edge(x, y),
    edge(y, z),
    adom(y2),
    y != x,
    z != x.

// T2-varianten (χ  {x != y, y != z}, γ  {y != z, z != x})
.decl T2(x1:number, y1:number, y:number, z:number, x:number, y:number)
T2(x1, z, x, y) :-
    edge(x, y),
    edge(z, x),
    adom(x1),
    x != y,
    y != z.

T2(x1, z, x, y) :-
    edge(x, y),
    edge(z, x),
    adom(x1),
    x != y,
    z != x.

T2(x1, z, x, y) :-
    edge(x, y),
    edge(z, x),
    adom(x1),
    y != z,
    y != z.

T2(x1, z, x, y) :-
    edge(x, y),
    edge(z, x),
    adom(x1),
    y != z,
    z != x.

// Output
.decl output0(x1:number, y1:number, x2:number, y2:number, x:number, y:number)
output0(x, y) :-
    edge(x, y),
    edge(y, z),
    edge(z, x).
	

//	Unfolding
// T1_1 T2_1
output0(x, y) :-
	// T1
    edge(x, y),
    edge(y, x1),
    adom(y2),
    x != x1,
    y != x1,
    
	// T2
	edge(x, y),
    edge(y2, x),
    adom(x1),
    x != y,
    y != y2,

    x != y.


// T1_1 T2_2
output0(x, y) :-
	// T1
    edge(x, y),
    edge(y, x1),
    adom(y2),
    x != x1,
    y != x1,

	// T2	
    edge(x, y),
    edge(y2, x),
    adom(x1),
    x != y,
    y2 != x,

    x != y.


// T1_1 T2_3
output0(x, y) :-
	// T1
    edge(x, y),
    edge(y, x1),
    adom(y2),
    x != x1,
    y != x1,

	// T2	
    edge(x, y),
    edge(y2, x),
    adom(x1),
    y != y2,
    y != y2,

    x != y.


// T1_1 T2_4
output0(x, y) :-
	// T1
    edge(x, y),
    edge(y, x1),
    adom(y2),
    x != x1,
    y != x1,

	// T2	
    edge(x, y),
    edge(y2, x),
    adom(x1),
    y != y2,
    y2 != x,

    x != y.


// T1_2 T2_1
output0(x, y) :-
    edge(x, y),
    edge(y, x1),
    adom(y2),
    x != x1,
    x1 != x,

    edge(x, y),
    edge(y2, x),
    adom(x1),
    x != y,
    y != y2,

    x != y.


// T1_2 T2_2
output0(x, y) :-
    edge(x, y),
    edge(y, x1),
    adom(y2),
    x != x1,
    x1 != x,

    edge(x, y),
    edge(y2, x),
    adom(x1),
    x != y,
    y2 != x,

    x != y.


// T1_2 T2_3
output0(x, y) :-
    edge(x, y),
    edge(y, x1),
    adom(y2),
    x != x1,
    x1 != x,

    edge(x, y),
    edge(y2, x),
    adom(x1),
    y != y2,
    y != y2,

    x != y.


// T1_2 T2_4
output0(x, y) :-
    edge(x, y),
    edge(y, x1),
    adom(y2),
    x != x1,
    x1 != x,

	edge(x, y),
    edge(y2, x),
    adom(x1),
    y != y2,
    y2 != x,

    x != y.


// T1_3 T2_1
output0(x, y) :-
    edge(x, y),
    edge(y, x1),
    adom(y2),
    y != x,
    y != x1,

    edge(x, y),
    edge(y2, x),
    adom(x1),
    x != y,
    y != y2,

    x != y.


// T1_3 T2_2
output0(x, y) :-
    edge(x, y),
    edge(y, x1),
    adom(y2),
    y != x,
    y != x1,

    edge(x, y),
    edge(y2, x),
    adom(x1),
    x != y,
    y2 != x,

    x != y.


// T1_3 T2_3
output0(x, y) :-
    edge(x, y),
    edge(y, x1),
    adom(y2),
    y != x,
    y != x1,

    edge(x, y),
    edge(y2, x),
    adom(x1),
    y != y2,
    y != y2,

    x != y.


// T1_3 T2_4
output0(x, y) :-
    edge(x, y),
    edge(y, x1),
    adom(y2),
    y != x,
    y != x1,

    edge(x, y),
    edge(y2, x),
    adom(x1),
    y != y2,
    y2 != x,

    x != y.


// T1_4 T2_1
output0(x, y) :-
    edge(x, y),
    edge(y, x1),
    adom(y2),
    y != x,
    x1 != x,

    edge(x, y),
    edge(y2, x),
    adom(x1),
    x != y,
    y != y2,

    x != y.


// T1_4 T2_2
output0(x, y) :-
    edge(x, y),
    edge(y, x1),
    adom(y2),
    y != x,
    x1 != x,

   	edge(x, y),
    edge(y2, x),
    adom(x1),
    x != y,
    y2 != x,

    x != y.


// T1_4 T2_3
output0(x, y) :-
    edge(x, y),
    edge(y, x1),
    adom(y2),
    y != x,
    x1 != x,

   	edge(x, y),
    edge(y2, x),
    adom(x1),
    y != y2,
    y != y2,

    x != y.


// T1_4 T2_4
output0(x, y) :-
    edge(x, y),
    edge(y, x1),
    adom(y2),
    y != x,
    x1 != x,

   	edge(x, y),
    edge(y2, x),
    adom(x1),
    y != y2,
    y2 != x,

    x != y.


// Projectie naar eindresultaat
.decl result_positive_rewritten(x:number, y:number)
.output result_positive_rewritten
result_positive_rewritten(x, y) :- output0(x, y).
